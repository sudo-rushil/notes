# UChicago 2023 Snippets

global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def text():
	return vim.eval('vimtex#syntax#in_mathzone()') == '0'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

# Environment Snippets ––––––––––––––––––––––––––––––––––––––––

snippet bg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet cn "construction" bA
\begin{con}$1
	$2
\end{con}
endsnippet

snippet cr "corollary" bA
\begin{cor}$1
	$2
\end{cor}
endsnippet

snippet df "defn" bA
\begin{defn}$1
	$2
\end{defn}
endsnippet


snippet ex "example" bA
\begin{exmp}$1
	$2
\end{exmp}
endsnippet

snippet it "item" bA
\item 
endsnippet

snippet lm "lemma" bA
\begin{lem}$1
	$2
\end{lem}
endsnippet

snippet nl "newline" bA
\newline

endsnippet

snippet pf "proof" bA
\begin{proof}
	$1
\end{proof}
endsnippet

snippet pr "proposition" bA
\begin{prop}$1
	$2
\end{prop}
endsnippet

snippet rm "remark" bA
\begin{rem}$1
	$2
\end{rem}
endsnippet

snippet tr "theorem" bA
\begin{thm}$1
	$2
\end{thm}
endsnippet

snippet wrn "warning" bA
\begin{warn}$1
	$2
\end{warn}
endsnippet

# Text Completions ––––––––––––––––––––––––––––––––––––––––––––

context "text()"
snippet ie "i.e." wA
i.e.\\ 
endsnippet

context "text()"
snippet st. "s.t." wA
s.t.\\ 
endsnippet

context "text()"
snippet wrt "with respect to" wA
with respect to 
endsnippet

context "text()"
snippet w/ "with" wA
with 
endsnippet

# Math Environments –––––––––––––––––––––––––––––––––––––––––––

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in ',.?- :;)':
# [',', '.', '?', '-', ' ', ':', ';', ')']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet qn "Equation" bA
\begin{equation}
	$1
\end{equation} 
endsnippet

snippet al "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet bn "big function" bA
\begin{align*}
	$1 \colon $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $0
.\end{align*}
endsnippet

context "math()"
snippet cs "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet dm "equation" bA
\begin{equation*}
	$1
\end{equation*}
endsnippet

context "math()"
snippet tt "text" iA
\text{$1} 
endsnippet

context "math()"
snippet bf "textbf" iA
\textbf{$1} 
endsnippet

# Delimiters ––––––––––––––––––––––––––––––––––––––––––––––––––

priority 0
context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet set "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet [] "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet ][ "left\Vert right\Vert" iA
\left\| ${1:${VISUAL}} \right\| $0
endsnippet

snippet <> "leftangle rightangle" iA
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

# Symbols –––––––––––––––––––––––––––––––––––––––––––––––––––––

context "math()"
snippet "c([c-fA-CG-Z])" "math curly" riA
\c`!p snip.rv=match.group(1)` 
endsnippet

context "math()"
snippet "([A-Z])\1" "math bold" riA
\\`!p snip.rv=match.group(1) + match.group(1)` 
endsnippet

context "math()"
snippet tx "exists" iA
\exists 
endsnippet

context "math()"
snippet fy "forall" iA
\forall 
endsnippet

context "math()"
snippet 0/0 "emptyset" iA
\emptyset 
endsnippet

context "math()"
snippet a. "alpha" iA
\alpha 
endsnippet

context "math()"
snippet b. "beta" iA
\beta 
endsnippet

context "math()"
snippet d. "delta" iA
\delta 
endsnippet

context "math()"
snippet e. "epsilon" iA
\epsilon 
endsnippet

context "math()"
snippet g. "gamma" iA
\gamma 
endsnippet

context "math()"
snippet h. "theta" iA
\theta 
endsnippet

context "math()"
snippet i. "iota" iA
\iota 
endsnippet

context "math()"
snippet k. "kappa" iA
\kappa 
endsnippet

context "math()"
snippet l. "lambda" iA
\lambda 
endsnippet

context "math()"
snippet n. "eta" iA
\eta 
endsnippet

context "math()"
snippet r. "rho" iA
\rho 
endsnippet

context "math()"
snippet s. "sigma" iA
\sigma 
endsnippet

context "math()"
snippet t. "tau" iA
\tau 
endsnippet

context "math()"
snippet v. "varepsilon" iA
\varepsilon 
endsnippet

context "math()"
snippet w. "omega" iA
\omega 
endsnippet

context "math()"
snippet !! "l" iA
\ell 
endsnippet

context "math()"
snippet ∞ "\infty" iA
\infty 
endsnippet

context "math()"
snippet ... "ldots" iA
\ldots 
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet '(?<!\\)(zeta|vartheta|mu|pi|nu|phi|chi|psi|upsilon)' "greeks" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet '(?<!\\)(Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)' "greeks3" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

# Sub/superscripts ––––––––––––––––––––––––––––––––––––––––––––

context "math()"
snippet ^^ "to the ... power" iA
^{$1} 
endsnippet

context "math()"
snippet --1 "inverse" iA
^{-1} 
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1} 
endsnippet

# Spaces/Categories –––––––––––––––––––––––––––––––––––––––––––

priority 1100
context "math()"
snippet 'F(\d)' "field" irA
\FF_`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet 'Z(\d)' "local ring" irA
\ZZ_{(`!p snip.rv = match.group(1)`)}
endsnippet

context "math()"
snippet 'S(\d|n)' "Spheres" irA
S^`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet '(?<!\\)(Ab|CAlg|Mod|QCoh|Sp|Set|Syn|Sm|Cat)' "Cats" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet spc "spaces" wA
\Spc
endsnippet

context "math()"
snippet --o "opposite" iA
^{\op} 
endsnippet

context "math()"
snippet --m "motivic" iA
^{\mot} 
endsnippet

# Operators –––––––––––––––––––––––––––––––––––––––––––––––––––

priority 0
context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet oo "circ" iA
\circ 
endsnippet

context "math()"
snippet in "in " iA
\in 
endsnippet

context "math()"
snippet nn "cap" iA
\cap 
endsnippet

context "math()"
snippet uu "cup" iA
\cup 
endsnippet

# Note: \subset means subset OR equal; proper given by \subsetneq! (ref: Math 55 Slack)
context "math()"
snippet (( "subset" Ai
\subset 
endsnippet

context "math()"
snippet c=c "subsetneq" Ai
\subsetneq 
endsnippet

context "math()"
snippet || "mid" iA
\mid  
endsnippet

context "math()"
snippet CUP "bigcup" iA
\bigcup 
endsnippet

context "math()"
snippet CAP "bigcap" iA
\bigcap 
endsnippet

priority 100
context "math()"
snippet ox "tensor" iA
\otimes 
endsnippet

context "math()"
snippet op "oplus" iA
\oplus 
endsnippet

context "math()"
snippet OP "bigoplus" wA
\bigoplus 
endsnippet

context "math()"
snippet OX "bigotimes" wA
\bigotimes 
endsnippet

context "math()"
snippet ol "overline" wA
\overline{$1}
endsnippet

context "math()"
snippet ul "underline" wA
\underline{$1}
endsnippet

context "math()"
snippet wt "widetilde" wA
\widetilde{$1}
endsnippet

# Equals/Arrows –––––––––––––––––––––––––––––––––––––––––––––––

context "math()"
snippet <= "leq" iA
\le 
endsnippet

context "math()"
snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet :: "colon" iA
\colon 
endsnippet

context "math()"
snippet := "coloneqq" iA
\coloneqq 
endsnippet

context "math()"
snippet ~= "simeq" iA
\simeq 
endsnippet

context "math()"
snippet =~ "cong" iA
\cong 
endsnippet

context "math()"
snippet :- "function" iA
\colon $1 \to 
endsnippet

priority 100
context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet -> "to" iA
\to 
endsnippet

context "math()"
snippet <- "to" iA
\leftarrow 
endsnippet

context "math()"
snippet to "to" iA
\xrightarrow{$1} 
endsnippet

context "math()"
snippet To "to" iA
\xRightarrow{$1} 
endsnippet

# Functions –––––––––––––––––––––––––––––––––––––––––––––––––––

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2} 
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet '(?<!\\)(min|max|int|sum|prod|ln|log|exp)' "funcs" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

priority 1200
context "math()"
snippet '(?<!\\)(dim|ker|im|Hom|Map|Fun|lim|Ext|colim|spec|Sh|PSh|SH)' "funcs2" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet ckr "cokernel" wA
\coker 
endsnippet

context "math()"
snippet cpd "coprod" wA
\coprod 
endsnippet